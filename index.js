#!/usr/bin/env node
'use strict';
const fs = require('fs-extra');
const path = require('path');
const chalk = require('chalk');
const argv = require('minimist')(process.argv.slice(2));
const glob = require('glob');

const TRANSLATIONS_FILENAME = 'drupal-gutenberg-translations.js';

// const source = argv._.length < 2 ? ['.'] : argv._[0] || ['.'];
// const target = argv._.length < 2 ? argv._[0] : argv._[1] || ['./js'];
const target = argv._[0] || './js';

// Match only on .js files.
const fileMatch = './**/*.js';
// Ignore
const globOptions = {
  ignore: ['./node_modules/**', './**/*.es6.js'],
};

const processFiles = (error, filePaths) => {
  if (error) {
    // process.exitCode = 1;
  }

  fs.ensureFileSync(path.join(target, TRANSLATIONS_FILENAME), err => {
    console.log(err) // => null
  });

  let content = `/*\n\tFile generated by drupal-gutenberg-translations tool.\n*/\n/*\n`;
  console.log(filePaths);
  filePaths.forEach(filePath => {
    const data = fs.readFileSync(filePath, {encoding: 'utf-8'});

    const regex = /\b\_[\_|n|x]\(\s*(.*?)\s*\)|\[\"\_[\_|n|x]\"\]\)\((.*?)\)/gm;
    let m;

    while ((m = regex.exec(data)) !== null) {
        // This is necessary to avoid infinite loops with zero-width matches
        if (m.index === regex.lastIndex) {
            regex.lastIndex++;
        }

        // let line = `\t//${m[0]} - ${filePath}\n`;
        let line = `\tDrupal.t(${m[1] || m[2]});\n`;
        content += line;
    }
  });

  content += '*/\n';

  fs.writeFileSync(path.join(target, TRANSLATIONS_FILENAME), content);
}

console.log(`${chalk.red('üè≥ Drupal Gutenberg Translations Builder')}`);
console.log(`${chalk.green('Target file')}: ${chalk.white(path.join(target, TRANSLATIONS_FILENAME))}`);

try {
  glob(fileMatch, globOptions, processFiles);
} catch (error) {
  console.error(error);
}
